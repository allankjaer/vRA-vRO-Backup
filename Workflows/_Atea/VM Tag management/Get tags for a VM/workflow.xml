<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item2" object-name="workflow:name=generic" id="1739b300-1c98-457b-8fac-52b8644e3734" editor-version="2.0" version="0.0.0" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Get tags for a VM</display-name>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="vmName" type="string"/>
    </input>
    <output>
        <param name="catAndTags" type="Properties"/>
    </output>
    <attrib name="vApiEndpoint" type="VAPI:VAPIEndpoint" conf-id="5d923e8d-d847-49d0-beef-3093f2418693" conf-key="vapiEndpoint"/>
    <attrib name="vm" type="VC:VirtualMachine">
        <value encoded="n"/>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="50.0" x="530.0"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item0" type="task" comparator="0">
        <display-name>Scriptable task</display-name>
        <script encoded="false">var vmsWithSpecificTag = new Array();&#13;
var client = vApiEndpoint.client();&#13;
var tagging = new com_vmware_cis_tagging_tag__association(client);&#13;
var tagMgr = new com_vmware_cis_tagging_tag(client);&#13;
var objId = new com_vmware_vapi_std_dynamic__ID();&#13;
var cat = new com_vmware_cis_tagging_category(client);&#13;
&#13;
objId.id = vm.id;&#13;
objId.type = vm.vimType;&#13;
&#13;
var tagList = tagging.list_attached_tags(objId);&#13;
&#13;
//System.debug("Taglist: " + tagList);&#13;
&#13;
var catAndTags = new Properties();&#13;
&#13;
for each (var tagId in tagList) {&#13;
    var theTag = tagMgr.get(tagId);&#13;
    var category = cat.get(theTag.category_id)&#13;
&#13;
    //System.log("Category: " + category.name)&#13;
    var tagName=theTag.name;&#13;
    //System.log("tagName: " + tagName);&#13;
    catAndTags.put(category.name,tagName);&#13;
}&#13;
client.close();</script>
        <in-binding>
            <bind name="vApiEndpoint" type="VAPI:VAPIEndpoint" export-name="vApiEndpoint"/>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding>
            <bind name="catAndTags" type="Properties" export-name="catAndTags"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="350.0"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item5" type="task" script-module="dk.atea.vra.vc.helper/getVMByName" comparator="0">
        <display-name>getVMByName</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("dk.atea.vra.vc.helper").getVMByName(name);
</script>
        <in-binding>
            <bind name="name" type="string" export-name="vmName">
                <description></description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:VirtualMachine" export-name="vm"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="60.0" x="150.0"/>
    </workflow-item>
    <workflow-item name="item4" type="end" end-mode="0" comparator="0">
        <position y="110.0" x="280.0"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item1" alt-out-name="item4" type="condition" comparator="0">
        <display-name>Decision</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
return (vm !== null);</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <condition name="vm" type="VC:VirtualMachine" comparator="0" label="null"></condition>
        <position y="50.0" x="245.0"/>
    </workflow-item>
    <presentation/>
</ns2:workflow>

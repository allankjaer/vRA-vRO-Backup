<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="178d0753-97ba-4012-b4e5-b1f9edefbb72" editor-version="2.0" version="0.0.1" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Set tags on VM i vCenter</display-name>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="inputProperties" type="Properties"/>
    </input>
    <output/>
    <attrib name="vmName" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="catsAndTags" type="Array/CompositeType(category:string,key:string):catAndTag">
        <value encoded="n">[]</value>
    </attrib>
    <attrib name="errorCode" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="vapiEndpoint" type="VAPI:VAPIEndpoint">
        <value encoded="n">dunes://service.dunes.ch/CustomSDKObject?id='ENDPOINT--https___adc-vc.adc.lan_api'&amp;dunesName='VAPI:VAPIEndpoint'</value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="50.0" x="620.0"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item4" type="task" comparator="0">
        <display-name>Get Catagories and Tags from Properties</display-name>
        <script encoded="false">vmName = payload.resourceNames[0];&#13;
&#13;
var vmProperties = new Properties;&#13;
vmProperties = payload.get("customProperties");&#13;
if (vmProperties != null) {&#13;
&#13;
//output vm properties to system.log&#13;
var propertyArray = new Array();&#13;
var catsAndTags = new Array();&#13;
&#13;
for each (propertyKey in vmProperties.keys)&#13;
{&#13;
&#13;
                if (propertyKey.substring(0, 3) === "tag") {&#13;
					catAndTag = new Object();&#13;
                    catAndTag["category"] = propertyKey.substring(3).replace("__"," ");&#13;
					catAndTag["key"] = vmProperties.get(propertyKey);&#13;
					catsAndTags.push(catAndTag);&#13;
				}&#13;
              	propertyArray.push(propertyKey + " = " + vmProperties.get(propertyKey));&#13;
}&#13;
&#13;
var sortedArray = propertyArray.sort();&#13;
for each(property in sortedArray)&#13;
{&#13;
                System.log(property);&#13;
}&#13;
}</script>
        <in-binding>
            <bind name="payload" type="Properties" export-name="inputProperties"/>
        </in-binding>
        <out-binding>
            <bind name="vmName" type="string" export-name="vmName"/>
            <bind name="catsAndTags" type="Array/CompositeType(category:string,key:string):catAndTag" export-name="catsAndTags"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="180.0"/>
    </workflow-item>
    <workflow-item name="item2" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="110.0" x="240.0"/>
    </workflow-item>
    <workflow-item name="item3" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="110.0" x="340.0"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item5" alt-out-name="item3" type="condition" comparator="0">
        <display-name>Decision</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
return (vmName !== null);</script>
        <in-binding>
            <bind name="vmName" type="string" export-name="vmName"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <condition name="vmName" type="string" comparator="3" label="null"></condition>
        <position y="50.0" x="300.0"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item0" type="task" comparator="0">
        <display-name>Set Tags for Catagories on VM</display-name>
        <script encoded="false">var sdkConnections = VcPlugin.allSdkConnections;&#13;
&#13;
for each (var host in sdkConnections) {&#13;
	var vms = host.getAllVirtualMachines();&#13;
	for each (var vm in vms) {&#13;
		if (vm.name === vmName) {&#13;
			var i = 0;&#13;
			while (i&lt;5){&#13;
                try {&#13;
					var client = vapiEndpoint.client();&#13;
					var tagAssociation = new com_vmware_cis_tagging_tag__association(client);&#13;
					var tagging = new com_vmware_cis_tagging_tag(client);&#13;
					var tagCategory = new com_vmware_cis_tagging_category(client);&#13;
&#13;
					for each (var catAndTag in catsAndTags) {&#13;
						for each (var cat in tagCategory.list()) {&#13;
							System.debug("cat: " + cat);&#13;
							if (catAndTag.category === tagCategory.get(cat).name) {&#13;
								for each (var jppolTag in tagging.list_tags_for_category(cat)) {&#13;
									System.debug("jppolTag: " + jppolTag + " tagging.get(jppolTag).name: " + tagging.get(jppolTag).name);&#13;
									if (catAndTag.key === tagging.get(jppolTag).name) {&#13;
										var enumerationId = new com_vmware_vapi_std_dynamic__ID() ;&#13;
										enumerationId.id = vm.id;&#13;
										enumerationId.type = vm.vimType;&#13;
										tagAssociation.attach(jppolTag, enumerationId);&#13;
									}&#13;
								}&#13;
							}&#13;
						}&#13;
					}&#13;
&#13;
					i=5;&#13;
&#13;
				} catch(e) {&#13;
					System.debug("Associating failed. Retrying " + i + " of 5 attempts");&#13;
					i++;&#13;
					if (i=4) { System.error(e.message); }&#13;
				}&#13;
			}&#13;
		}&#13;
	}&#13;
}&#13;
&#13;
</script>
        <in-binding>
            <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint"/>
            <bind name="vmName" type="string" export-name="vmName"/>
            <bind name="catsAndTags" type="Array/CompositeType(category:string,key:string):catAndTag" export-name="catsAndTags"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="414.0"/>
    </workflow-item>
    <presentation/>
</ns2:workflow>

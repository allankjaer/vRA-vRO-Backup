<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="013d742f-4906-4cd4-968f-e4e7c98a3c2c" editor-version="2.0" version="0.0.6" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Right Size VM</display-name>
    <position y="50.0" x="80.0"/>
    <input>
        <param name="vmName" type="string"/>
    </input>
    <output/>
    <attrib name="catAndTags" type="Properties">
        <value encoded="n">{}</value>
    </attrib>
    <attrib name="vm" type="VC:VirtualMachine">
        <value encoded="n"/>
    </attrib>
    <attrib name="rightSize" type="boolean">
        <value encoded="n">false</value>
    </attrib>
    <attrib name="configMem" type="number">
        <value encoded="n"/>
    </attrib>
    <attrib name="configCPU" type="number">
        <value encoded="n"/>
    </attrib>
    <attrib name="actionResult" type="VC:Task">
        <value encoded="n"/>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="50.0" x="1120.0"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item9" type="link" linked-workflow-id="1739b300-1c98-457b-8fac-52b8644e3734" comparator="0">
        <display-name>Get tags for a VM</display-name>
        <in-binding>
            <bind name="vmName" type="string" export-name="vmName"/>
        </in-binding>
        <out-binding>
            <bind name="catAndTags" type="Properties" export-name="catAndTags"/>
        </out-binding>
        <description> </description>
        <position y="60.0" x="140.0"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item4" type="task" script-module="dk.atea.vra.vc.helper/getVMByName" comparator="0">
        <display-name>getVMByName</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("dk.atea.vra.vc.helper").getVMByName(name);
</script>
        <in-binding>
            <bind name="name" type="string" export-name="vmName"/>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:VirtualMachine" export-name="vm"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="60.0" x="462.5"/>
    </workflow-item>
    <workflow-item name="item3" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="110.0" x="607.5"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item5" alt-out-name="item3" type="condition" comparator="0">
        <display-name>VM not null</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
return (vm !== null);</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <condition name="vm" type="VC:VirtualMachine" comparator="0" label="null"></condition>
        <position y="50.0" x="567.5"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item12" type="task" comparator="0">
        <display-name>Find Right Size Values</display-name>
        <script encoded="false">var cpu = vm.cpu.split(" ",1);
var memory = vm.memory.split(" ",1) / 1024;
rightSize = false;
configMem = memory;
configCPU = cpu;

if (catAndTags.get("Atea Right Size vCPU") != null) {
    if (catAndTags.get("Atea Right Size vCPU") != cpu) {
        if (cpu == catAndTags.get("Atea Right Size vCPU")) {
            System.log("no change to CPU");
        } else {
            if (catAndTags.get("Atea Right Size Max. vCPU") != null) {
                if (catAndTags.get("Atea Right Size vCPU") &lt; catAndTags.get("Atea Right Size Max. vCPU")) {
                    if (catAndTags.get("Atea Right Size Min. vCPU") != null) {
                        if (catAndTags.get("Atea Right Size vCPU") &gt; catAndTags.get("Atea Right Size Min. vCPU")) {
                            configCPU = catAndTags.get("Atea Right Size vCPU");
                            rightSize = true;
                        }
                    }
                    else {
                        configCPU = catAndTags.get("Atea Right Size vCPU");
                        rightSize = true;
                    }
                    
                }
            
            }
            else {
                if (catAndTags.get("Atea Right Size Min. vCPU") != null) {
                    if (catAndTags.get("Atea Right Size vCPU") &gt; catAndTags.get("Atea Right Size Min. vCPU")) {
                        configCPU = catAndTags.get("Atea Right Size vCPU");
                        rightSize = true;
                    }
                }
                else {
                    configCPU = catAndTags.get("Atea Right Size vCPU");
                    rightSize = true;
                }
            }
        }
    }
}

if (catAndTags.get("Atea Right Size Memory") != null) {
    if (catAndTags.get("Atea Right Size Memory") != memory) {
        if (memory == catAndTags.get("Atea Right Size Memory")) {
            System("no change to Mmemory")
        } else {
            if (catAndTags.get("Atea Right Size Max. Memory") != null) {
                if (catAndTags.get("Atea Right Size Memory") &lt; catAndTags.get("Atea Right Size Max. Memory")) {
                    if (catAndTags.get("Atea Right Size Min. Memory") != null) {
                        if (catAndTags.get("Atea Right Size Memory") &gt; catAndTags.get("Atea Right Size Min. Memory")) {
                            configMem = catAndTags.get("Atea Right Size Memory");
                            rightSize = true;
                        }
                    }
                    else {
                        configMem = catAndTags.get("Atea Right Size Memory");
                        rightSize = true;
                    }
                    
                }
            
            }
            else {
                if (catAndTags.get("Atea Right Size Min. Memory") != null) {
                    if (catAndTags.get("Atea Right Size Memory") &gt; catAndTags.get("Atea Right Size Min. Memory")) {
                        configMem = catAndTags.get("Atea Right Size Memory")
                        rightSize = true;
                    }
                }
                else {
                    configMem = catAndTags.get("Atea Right Size Memory");
                    rightSize = true;
                }
            }
        }
    }
}

configMem = configMem * 1024;

System.log(configCPU + ":" + configMem)</script>
        <in-binding>
            <bind name="catAndTags" type="Properties" export-name="catAndTags"/>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding>
            <bind name="configMem" type="number" export-name="configMem"/>
            <bind name="configCPU" type="number" export-name="configCPU"/>
            <bind name="rightSize" type="boolean" export-name="rightSize"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="680.0"/>
    </workflow-item>
    <workflow-item name="item6" type="end" end-mode="0" business-status="" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="110.0" x="400.0"/>
    </workflow-item>
    <workflow-item name="item8" out-name="item2" alt-out-name="item6" type="condition" comparator="0">
        <display-name>Right Size True</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
return (rightSize === true);</script>
        <in-binding>
            <bind name="rightSize" type="boolean" export-name="rightSize"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <condition name="rightSize" type="boolean" comparator="0" label="null"></condition>
        <position y="50.0" x="360.0"/>
    </workflow-item>
    <workflow-item name="item9" out-name="item8" type="task" comparator="0">
        <display-name>Is Right Size Allowed</display-name>
        <script encoded="false">if (catAndTags.get("Atea Right Size") == "true") {
    rightSize = true;
} else {
    rightSize = false
}</script>
        <in-binding>
            <bind name="catAndTags" type="Properties" export-name="catAndTags"/>
        </in-binding>
        <out-binding>
            <bind name="rightSize" type="boolean" export-name="rightSize"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="260.0"/>
    </workflow-item>
    <workflow-item name="item11" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="110.0" x="860.0"/>
    </workflow-item>
    <workflow-item name="item12" out-name="item13" alt-out-name="item11" type="condition" comparator="0">
        <display-name>Right Size necessary</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
return (rightSize === true);</script>
        <in-binding>
            <bind name="rightSize" type="boolean" export-name="rightSize"/>
        </in-binding>
        <out-binding/>
        <description>Custom decision based on a custom script.</description>
        <condition name="rightSize" type="boolean" comparator="0" label="null"></condition>
        <position y="50.0" x="820.0"/>
    </workflow-item>
    <workflow-item name="item13" out-name="item0" type="task" script-module="dk.atea.vc.helper/changeVMvCPU_NUMA" comparator="0">
        <display-name>changeVMvCPU_NUMA</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("dk.atea.vc.helper").changeVMvCPU_NUMA(vm,vcpu,memory);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm">
                <description>The VM to change</description>
            </bind>
            <bind name="vcpu" type="number" export-name="configCPU">
                <description>New vCPU number</description>
            </bind>
            <bind name="memory" type="number" export-name="configMem">
                <description>New Memory number</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:Task" export-name="actionResult"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="60.0" x="960.0"/>
    </workflow-item>
    <presentation>
        <p-param name="vmName">
            <desc>vmName</desc>
        </p-param>
    </presentation>
</ns2:workflow>
